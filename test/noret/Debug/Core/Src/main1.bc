; ModuleID = '<stdin>'
source_filename = "../Core/Src/main.c"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.__UART_HandleTypeDef = type { ptr, %struct.UART_InitTypeDef, ptr, i16, i16, ptr, i16, i16, i32, ptr, ptr, i32, i32, i32, i32 }
%struct.UART_InitTypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.I2C_HandleTypeDef = type { ptr, %struct.I2C_InitTypeDef, ptr, i16, i16, i32, i32, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.I2C_InitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.__I2S_HandleTypeDef = type { ptr, %struct.I2S_InitTypeDef, ptr, i16, i16, ptr, i16, i16, ptr, ptr, ptr, i32, i32, i32 }
%struct.I2S_InitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.__SPI_HandleTypeDef = type { ptr, %struct.SPI_InitTypeDef, ptr, i16, i16, ptr, i16, i16, ptr, ptr, ptr, ptr, i32, i32, i32 }
%struct.SPI_InitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, [2 x i32], i32, i32 }
%struct.GPIO_InitTypeDef = type { i32, i32, i32, i32, i32 }

@huart2 = dso_local global %struct.__UART_HandleTypeDef zeroinitializer, align 4
@.str = private unnamed_addr constant [5 x i8] c"%d\0D\0A\00", align 1
@hi2c1 = dso_local global %struct.I2C_HandleTypeDef zeroinitializer, align 4
@hi2s3 = dso_local global %struct.__I2S_HandleTypeDef zeroinitializer, align 4
@hspi1 = dso_local global %struct.__SPI_HandleTypeDef zeroinitializer, align 4

; Function Attrs: noinline nounwind optnone
define dso_local i32 @__io_putchar(i32 noundef %0) #0 !dbg !7 {
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  %3 = call i32 @HAL_UART_Transmit(ptr noundef @huart2, ptr noundef %2, i16 noundef zeroext 1, i32 noundef 100), !dbg !10
  %4 = load i32, ptr %2, align 4, !dbg !11
  ret i32 %4, !dbg !12
}

declare dso_local i32 @HAL_UART_Transmit(ptr noundef, ptr noundef, i16 noundef zeroext, i32 noundef) #1

; Function Attrs: noinline nounwind optnone
define dso_local i32 @function_a(i32 noundef %0, i32 noundef %1, i32 noundef %2) #0 !dbg !13 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, ptr %4, align 4
  store i32 %1, ptr %5, align 4
  store i32 %2, ptr %6, align 4
  %9 = load i32, ptr %4, align 4, !dbg !14
  %10 = load i32, ptr %5, align 4, !dbg !15
  %11 = add nsw i32 %9, %10, !dbg !16
  %12 = load i32, ptr %6, align 4, !dbg !17
  %13 = add nsw i32 %11, %12, !dbg !18
  store i32 %13, ptr %7, align 4, !dbg !19
  %14 = load i32, ptr %7, align 4, !dbg !20
  call void asm sideeffect "function_a_0_FORPUSH:;movt lr, 0x0000;movw lr, 0x080C;push {lr}", ""(), !dbg !21
  %15 = call i32 @function_b(i32 noundef 1, i32 noundef 2, i32 noundef 3, i32 noundef 4, i32 noundef %14), !dbg !21
  store i32 %15, ptr %8, align 4, !dbg !22
  %16 = load i32, ptr %8, align 4, !dbg !23
  ret i32 %16, !dbg !24
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @function_b(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 !dbg !25 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, ptr %6, align 4
  store i32 %1, ptr %7, align 4
  store i32 %2, ptr %8, align 4
  store i32 %3, ptr %9, align 4
  store i32 %4, ptr %10, align 4
  %12 = load i32, ptr %6, align 4, !dbg !26
  %13 = load i32, ptr %7, align 4, !dbg !27
  %14 = add nsw i32 %12, %13, !dbg !28
  %15 = load i32, ptr %8, align 4, !dbg !29
  %16 = add nsw i32 %14, %15, !dbg !30
  %17 = load i32, ptr %9, align 4, !dbg !31
  %18 = add nsw i32 %16, %17, !dbg !32
  %19 = load i32, ptr %10, align 4, !dbg !33
  %20 = add nsw i32 %18, %19, !dbg !34
  store i32 %20, ptr %11, align 4, !dbg !35
  %21 = load i32, ptr %11, align 4, !dbg !36
  ret i32 %21, !dbg !37
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @main() #0 !dbg !38 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 0, ptr %1, align 4
  %4 = call i32 @HAL_Init(), !dbg !39
  call void asm sideeffect "main_0_FORPUSH:;movt lr, 0x0000;movw lr, 0x080C;push {lr}", ""(), !dbg !40
  call void @SystemClock_Config(), !dbg !40
  call void asm sideeffect "main_1_FORPUSH:;movt lr, 0x0000;movw lr, 0x080C;push {lr}", ""(), !dbg !41
  call void @MX_GPIO_Init(), !dbg !41
  call void asm sideeffect "main_2_FORPUSH:;movt lr, 0x0000;movw lr, 0x080C;push {lr}", ""(), !dbg !42
  call void @MX_I2C1_Init(), !dbg !42
  call void asm sideeffect "main_3_FORPUSH:;movt lr, 0x0000;movw lr, 0x080C;push {lr}", ""(), !dbg !43
  call void @MX_I2S3_Init(), !dbg !43
  call void asm sideeffect "main_4_FORPUSH:;movt lr, 0x0000;movw lr, 0x080C;push {lr}", ""(), !dbg !44
  call void @MX_SPI1_Init(), !dbg !44
  call void @MX_USB_HOST_Init(), !dbg !45
  call void asm sideeffect "main_5_FORPUSH:;movt lr, 0x0000;movw lr, 0x080C;push {lr}", ""(), !dbg !46
  call void @MX_USART2_UART_Init(), !dbg !46
  store i32 0, ptr %2, align 4, !dbg !47
  br label %5, !dbg !48

5:                                                ; preds = %5, %0
  call void @MX_USB_HOST_Process(), !dbg !49
  %6 = load i32, ptr %2, align 4, !dbg !50
  %7 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %6), !dbg !51
  call void asm sideeffect "main_6_FORPUSH:;movt lr, 0x0000;movw lr, 0x080C;push {lr}", ""(), !dbg !52
  %8 = call i32 @function_a(i32 noundef 1, i32 noundef 2, i32 noundef 3), !dbg !52
  store i32 %8, ptr %3, align 4, !dbg !53
  %9 = load i32, ptr %2, align 4, !dbg !54
  %10 = add nsw i32 %9, 1, !dbg !54
  store i32 %10, ptr %2, align 4, !dbg !54
  call void @HAL_Delay(i32 noundef 1), !dbg !55
  br label %5, !dbg !48, !llvm.loop !56
}

declare dso_local i32 @HAL_Init() #1

; Function Attrs: noinline nounwind optnone
define dso_local void @SystemClock_Config() #0 !dbg !58 {
  %1 = alloca %struct.RCC_OscInitTypeDef, align 4
  %2 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %1, i8 0, i32 48, i1 false), !dbg !59
  call void @llvm.memset.p0.i32(ptr align 4 %2, i8 0, i32 20, i1 false), !dbg !60
  br label %5, !dbg !61

5:                                                ; preds = %0
  store volatile i32 0, ptr %3, align 4, !dbg !61
  %6 = load volatile i32, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 15), align 4, !dbg !61
  %7 = or i32 %6, 268435456, !dbg !61
  store volatile i32 %7, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 15), align 4, !dbg !61
  %8 = load volatile i32, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 15), align 4, !dbg !61
  %9 = and i32 %8, 268435456, !dbg !61
  store volatile i32 %9, ptr %3, align 4, !dbg !61
  %10 = load volatile i32, ptr %3, align 4, !dbg !61
  br label %11, !dbg !61

11:                                               ; preds = %5
  br label %12, !dbg !62

12:                                               ; preds = %11
  store volatile i32 0, ptr %4, align 4, !dbg !62
  %13 = load volatile i32, ptr inttoptr (i32 1073770496 to ptr), align 4, !dbg !62
  %14 = and i32 %13, -16385, !dbg !62
  %15 = or i32 %14, 16384, !dbg !62
  store volatile i32 %15, ptr inttoptr (i32 1073770496 to ptr), align 4, !dbg !62
  %16 = load volatile i32, ptr inttoptr (i32 1073770496 to ptr), align 4, !dbg !62
  %17 = and i32 %16, 16384, !dbg !62
  store volatile i32 %17, ptr %4, align 4, !dbg !62
  %18 = load volatile i32, ptr %4, align 4, !dbg !62
  br label %19, !dbg !62

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.RCC_OscInitTypeDef, ptr %1, i32 0, i32 0, !dbg !63
  store i32 1, ptr %20, align 4, !dbg !64
  %21 = getelementptr inbounds %struct.RCC_OscInitTypeDef, ptr %1, i32 0, i32 1, !dbg !65
  store i32 65536, ptr %21, align 4, !dbg !66
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, ptr %1, i32 0, i32 6, !dbg !67
  %23 = getelementptr inbounds %struct.RCC_PLLInitTypeDef, ptr %22, i32 0, i32 0, !dbg !68
  store i32 2, ptr %23, align 4, !dbg !69
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, ptr %1, i32 0, i32 6, !dbg !70
  %25 = getelementptr inbounds %struct.RCC_PLLInitTypeDef, ptr %24, i32 0, i32 1, !dbg !71
  store i32 4194304, ptr %25, align 4, !dbg !72
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, ptr %1, i32 0, i32 6, !dbg !73
  %27 = getelementptr inbounds %struct.RCC_PLLInitTypeDef, ptr %26, i32 0, i32 2, !dbg !74
  store i32 8, ptr %27, align 4, !dbg !75
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, ptr %1, i32 0, i32 6, !dbg !76
  %29 = getelementptr inbounds %struct.RCC_PLLInitTypeDef, ptr %28, i32 0, i32 3, !dbg !77
  store i32 336, ptr %29, align 4, !dbg !78
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, ptr %1, i32 0, i32 6, !dbg !79
  %31 = getelementptr inbounds %struct.RCC_PLLInitTypeDef, ptr %30, i32 0, i32 4, !dbg !80
  store i32 2, ptr %31, align 4, !dbg !81
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, ptr %1, i32 0, i32 6, !dbg !82
  %33 = getelementptr inbounds %struct.RCC_PLLInitTypeDef, ptr %32, i32 0, i32 5, !dbg !83
  store i32 7, ptr %33, align 4, !dbg !84
  %34 = call i32 @HAL_RCC_OscConfig(ptr noundef %1), !dbg !85
  %35 = icmp ne i32 %34, 0, !dbg !86
  br i1 %35, label %36, label %37, !dbg !85

36:                                               ; preds = %19
  call void asm sideeffect "SystemClock_Config_0_FORPUSH:;movt lr, 0x0000;movw lr, 0x080C;push {lr}", ""(), !dbg !87
  call void @Error_Handler(), !dbg !87
  br label %37, !dbg !88

37:                                               ; preds = %36, %19
  %38 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, ptr %2, i32 0, i32 0, !dbg !89
  store i32 15, ptr %38, align 4, !dbg !90
  %39 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, ptr %2, i32 0, i32 1, !dbg !91
  store i32 2, ptr %39, align 4, !dbg !92
  %40 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, ptr %2, i32 0, i32 2, !dbg !93
  store i32 0, ptr %40, align 4, !dbg !94
  %41 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, ptr %2, i32 0, i32 3, !dbg !95
  store i32 5120, ptr %41, align 4, !dbg !96
  %42 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, ptr %2, i32 0, i32 4, !dbg !97
  store i32 4096, ptr %42, align 4, !dbg !98
  %43 = call i32 @HAL_RCC_ClockConfig(ptr noundef %2, i32 noundef 5), !dbg !99
  %44 = icmp ne i32 %43, 0, !dbg !100
  br i1 %44, label %45, label %46, !dbg !99

45:                                               ; preds = %37
  call void asm sideeffect "SystemClock_Config_1_FORPUSH:;movt lr, 0x0000;movw lr, 0x080C;push {lr}", ""(), !dbg !101
  call void @Error_Handler(), !dbg !101
  br label %46, !dbg !102

46:                                               ; preds = %45, %37
  ret void, !dbg !103
}

; Function Attrs: noinline nounwind optnone
define internal void @MX_GPIO_Init() #0 !dbg !104 {
  %1 = alloca %struct.GPIO_InitTypeDef, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %1, i8 0, i32 20, i1 false), !dbg !105
  br label %8, !dbg !106

8:                                                ; preds = %0
  store volatile i32 0, ptr %2, align 4, !dbg !106
  %9 = load volatile i32, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !106
  %10 = or i32 %9, 16, !dbg !106
  store volatile i32 %10, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !106
  %11 = load volatile i32, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !106
  %12 = and i32 %11, 16, !dbg !106
  store volatile i32 %12, ptr %2, align 4, !dbg !106
  %13 = load volatile i32, ptr %2, align 4, !dbg !106
  br label %14, !dbg !106

14:                                               ; preds = %8
  br label %15, !dbg !107

15:                                               ; preds = %14
  store volatile i32 0, ptr %3, align 4, !dbg !107
  %16 = load volatile i32, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !107
  %17 = or i32 %16, 4, !dbg !107
  store volatile i32 %17, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !107
  %18 = load volatile i32, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !107
  %19 = and i32 %18, 4, !dbg !107
  store volatile i32 %19, ptr %3, align 4, !dbg !107
  %20 = load volatile i32, ptr %3, align 4, !dbg !107
  br label %21, !dbg !107

21:                                               ; preds = %15
  br label %22, !dbg !108

22:                                               ; preds = %21
  store volatile i32 0, ptr %4, align 4, !dbg !108
  %23 = load volatile i32, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !108
  %24 = or i32 %23, 128, !dbg !108
  store volatile i32 %24, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !108
  %25 = load volatile i32, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !108
  %26 = and i32 %25, 128, !dbg !108
  store volatile i32 %26, ptr %4, align 4, !dbg !108
  %27 = load volatile i32, ptr %4, align 4, !dbg !108
  br label %28, !dbg !108

28:                                               ; preds = %22
  br label %29, !dbg !109

29:                                               ; preds = %28
  store volatile i32 0, ptr %5, align 4, !dbg !109
  %30 = load volatile i32, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !109
  %31 = or i32 %30, 1, !dbg !109
  store volatile i32 %31, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !109
  %32 = load volatile i32, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !109
  %33 = and i32 %32, 1, !dbg !109
  store volatile i32 %33, ptr %5, align 4, !dbg !109
  %34 = load volatile i32, ptr %5, align 4, !dbg !109
  br label %35, !dbg !109

35:                                               ; preds = %29
  br label %36, !dbg !110

36:                                               ; preds = %35
  store volatile i32 0, ptr %6, align 4, !dbg !110
  %37 = load volatile i32, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !110
  %38 = or i32 %37, 2, !dbg !110
  store volatile i32 %38, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !110
  %39 = load volatile i32, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !110
  %40 = and i32 %39, 2, !dbg !110
  store volatile i32 %40, ptr %6, align 4, !dbg !110
  %41 = load volatile i32, ptr %6, align 4, !dbg !110
  br label %42, !dbg !110

42:                                               ; preds = %36
  br label %43, !dbg !111

43:                                               ; preds = %42
  store volatile i32 0, ptr %7, align 4, !dbg !111
  %44 = load volatile i32, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !111
  %45 = or i32 %44, 8, !dbg !111
  store volatile i32 %45, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !111
  %46 = load volatile i32, ptr getelementptr inbounds (%struct.RCC_TypeDef, ptr inttoptr (i32 1073887232 to ptr), i32 0, i32 11), align 4, !dbg !111
  %47 = and i32 %46, 8, !dbg !111
  store volatile i32 %47, ptr %7, align 4, !dbg !111
  %48 = load volatile i32, ptr %7, align 4, !dbg !111
  br label %49, !dbg !111

49:                                               ; preds = %43
  call void @HAL_GPIO_WritePin(ptr noundef inttoptr (i32 1073876992 to ptr), i16 noundef zeroext 8, i32 noundef 0), !dbg !112
  call void @HAL_GPIO_WritePin(ptr noundef inttoptr (i32 1073874944 to ptr), i16 noundef zeroext 1, i32 noundef 1), !dbg !113
  call void @HAL_GPIO_WritePin(ptr noundef inttoptr (i32 1073875968 to ptr), i16 noundef zeroext -4080, i32 noundef 0), !dbg !114
  %50 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 0, !dbg !115
  store i32 8, ptr %50, align 4, !dbg !116
  %51 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 1, !dbg !117
  store i32 1, ptr %51, align 4, !dbg !118
  %52 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 2, !dbg !119
  store i32 0, ptr %52, align 4, !dbg !120
  %53 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 3, !dbg !121
  store i32 0, ptr %53, align 4, !dbg !122
  call void @HAL_GPIO_Init(ptr noundef inttoptr (i32 1073876992 to ptr), ptr noundef %1), !dbg !123
  %54 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 0, !dbg !124
  store i32 1, ptr %54, align 4, !dbg !125
  %55 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 1, !dbg !126
  store i32 1, ptr %55, align 4, !dbg !127
  %56 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 2, !dbg !128
  store i32 0, ptr %56, align 4, !dbg !129
  %57 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 3, !dbg !130
  store i32 0, ptr %57, align 4, !dbg !131
  call void @HAL_GPIO_Init(ptr noundef inttoptr (i32 1073874944 to ptr), ptr noundef %1), !dbg !132
  %58 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 0, !dbg !133
  store i32 8, ptr %58, align 4, !dbg !134
  %59 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 1, !dbg !135
  store i32 2, ptr %59, align 4, !dbg !136
  %60 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 2, !dbg !137
  store i32 0, ptr %60, align 4, !dbg !138
  %61 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 3, !dbg !139
  store i32 0, ptr %61, align 4, !dbg !140
  %62 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 4, !dbg !141
  store i32 5, ptr %62, align 4, !dbg !142
  call void @HAL_GPIO_Init(ptr noundef inttoptr (i32 1073874944 to ptr), ptr noundef %1), !dbg !143
  %63 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 0, !dbg !144
  store i32 1, ptr %63, align 4, !dbg !145
  %64 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 1, !dbg !146
  store i32 1179648, ptr %64, align 4, !dbg !147
  %65 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 2, !dbg !148
  store i32 0, ptr %65, align 4, !dbg !149
  call void @HAL_GPIO_Init(ptr noundef inttoptr (i32 1073872896 to ptr), ptr noundef %1), !dbg !150
  %66 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 0, !dbg !151
  store i32 4, ptr %66, align 4, !dbg !152
  %67 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 1, !dbg !153
  store i32 0, ptr %67, align 4, !dbg !154
  %68 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 2, !dbg !155
  store i32 0, ptr %68, align 4, !dbg !156
  call void @HAL_GPIO_Init(ptr noundef inttoptr (i32 1073873920 to ptr), ptr noundef %1), !dbg !157
  %69 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 0, !dbg !158
  store i32 1024, ptr %69, align 4, !dbg !159
  %70 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 1, !dbg !160
  store i32 2, ptr %70, align 4, !dbg !161
  %71 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 2, !dbg !162
  store i32 0, ptr %71, align 4, !dbg !163
  %72 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 3, !dbg !164
  store i32 0, ptr %72, align 4, !dbg !165
  %73 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 4, !dbg !166
  store i32 5, ptr %73, align 4, !dbg !167
  call void @HAL_GPIO_Init(ptr noundef inttoptr (i32 1073873920 to ptr), ptr noundef %1), !dbg !168
  %74 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 0, !dbg !169
  store i32 61456, ptr %74, align 4, !dbg !170
  %75 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 1, !dbg !171
  store i32 1, ptr %75, align 4, !dbg !172
  %76 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 2, !dbg !173
  store i32 0, ptr %76, align 4, !dbg !174
  %77 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 3, !dbg !175
  store i32 0, ptr %77, align 4, !dbg !176
  call void @HAL_GPIO_Init(ptr noundef inttoptr (i32 1073875968 to ptr), ptr noundef %1), !dbg !177
  %78 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 0, !dbg !178
  store i32 32, ptr %78, align 4, !dbg !179
  %79 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 1, !dbg !180
  store i32 0, ptr %79, align 4, !dbg !181
  %80 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 2, !dbg !182
  store i32 0, ptr %80, align 4, !dbg !183
  call void @HAL_GPIO_Init(ptr noundef inttoptr (i32 1073875968 to ptr), ptr noundef %1), !dbg !184
  %81 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 0, !dbg !185
  store i32 2, ptr %81, align 4, !dbg !186
  %82 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 1, !dbg !187
  store i32 1179648, ptr %82, align 4, !dbg !188
  %83 = getelementptr inbounds %struct.GPIO_InitTypeDef, ptr %1, i32 0, i32 2, !dbg !189
  store i32 0, ptr %83, align 4, !dbg !190
  call void @HAL_GPIO_Init(ptr noundef inttoptr (i32 1073876992 to ptr), ptr noundef %1), !dbg !191
  ret void, !dbg !192
}

; Function Attrs: noinline nounwind optnone
define internal void @MX_I2C1_Init() #0 !dbg !193 {
  store ptr inttoptr (i32 1073763328 to ptr), ptr @hi2c1, align 4, !dbg !194
  store i32 100000, ptr getelementptr inbounds (%struct.I2C_HandleTypeDef, ptr @hi2c1, i32 0, i32 1), align 4, !dbg !195
  store i32 0, ptr getelementptr inbounds (%struct.I2C_HandleTypeDef, ptr @hi2c1, i32 0, i32 1, i32 1), align 4, !dbg !196
  store i32 0, ptr getelementptr inbounds (%struct.I2C_HandleTypeDef, ptr @hi2c1, i32 0, i32 1, i32 2), align 4, !dbg !197
  store i32 16384, ptr getelementptr inbounds (%struct.I2C_HandleTypeDef, ptr @hi2c1, i32 0, i32 1, i32 3), align 4, !dbg !198
  store i32 0, ptr getelementptr inbounds (%struct.I2C_HandleTypeDef, ptr @hi2c1, i32 0, i32 1, i32 4), align 4, !dbg !199
  store i32 0, ptr getelementptr inbounds (%struct.I2C_HandleTypeDef, ptr @hi2c1, i32 0, i32 1, i32 5), align 4, !dbg !200
  store i32 0, ptr getelementptr inbounds (%struct.I2C_HandleTypeDef, ptr @hi2c1, i32 0, i32 1, i32 6), align 4, !dbg !201
  store i32 0, ptr getelementptr inbounds (%struct.I2C_HandleTypeDef, ptr @hi2c1, i32 0, i32 1, i32 7), align 4, !dbg !202
  %1 = call i32 @HAL_I2C_Init(ptr noundef @hi2c1), !dbg !203
  %2 = icmp ne i32 %1, 0, !dbg !204
  br i1 %2, label %3, label %4, !dbg !203

3:                                                ; preds = %0
  call void asm sideeffect "MX_I2C1_Init_0_FORPUSH:;movt lr, 0x0000;movw lr, 0x080C;push {lr}", ""(), !dbg !205
  call void @Error_Handler(), !dbg !205
  br label %4, !dbg !206

4:                                                ; preds = %3, %0
  ret void, !dbg !207
}

; Function Attrs: noinline nounwind optnone
define internal void @MX_I2S3_Init() #0 !dbg !208 {
  store ptr inttoptr (i32 1073757184 to ptr), ptr @hi2s3, align 4, !dbg !209
  store i32 512, ptr getelementptr inbounds (%struct.__I2S_HandleTypeDef, ptr @hi2s3, i32 0, i32 1), align 4, !dbg !210
  store i32 0, ptr getelementptr inbounds (%struct.__I2S_HandleTypeDef, ptr @hi2s3, i32 0, i32 1, i32 1), align 4, !dbg !211
  store i32 0, ptr getelementptr inbounds (%struct.__I2S_HandleTypeDef, ptr @hi2s3, i32 0, i32 1, i32 2), align 4, !dbg !212
  store i32 512, ptr getelementptr inbounds (%struct.__I2S_HandleTypeDef, ptr @hi2s3, i32 0, i32 1, i32 3), align 4, !dbg !213
  store i32 96000, ptr getelementptr inbounds (%struct.__I2S_HandleTypeDef, ptr @hi2s3, i32 0, i32 1, i32 4), align 4, !dbg !214
  store i32 0, ptr getelementptr inbounds (%struct.__I2S_HandleTypeDef, ptr @hi2s3, i32 0, i32 1, i32 5), align 4, !dbg !215
  store i32 0, ptr getelementptr inbounds (%struct.__I2S_HandleTypeDef, ptr @hi2s3, i32 0, i32 1, i32 6), align 4, !dbg !216
  store i32 0, ptr getelementptr inbounds (%struct.__I2S_HandleTypeDef, ptr @hi2s3, i32 0, i32 1, i32 7), align 4, !dbg !217
  %1 = call i32 @HAL_I2S_Init(ptr noundef @hi2s3), !dbg !218
  %2 = icmp ne i32 %1, 0, !dbg !219
  br i1 %2, label %3, label %4, !dbg !218

3:                                                ; preds = %0
  call void asm sideeffect "MX_I2S3_Init_0_FORPUSH:;movt lr, 0x0000;movw lr, 0x080C;push {lr}", ""(), !dbg !220
  call void @Error_Handler(), !dbg !220
  br label %4, !dbg !221

4:                                                ; preds = %3, %0
  ret void, !dbg !222
}

; Function Attrs: noinline nounwind optnone
define internal void @MX_SPI1_Init() #0 !dbg !223 {
  store ptr inttoptr (i32 1073819648 to ptr), ptr @hspi1, align 4, !dbg !224
  store i32 260, ptr getelementptr inbounds (%struct.__SPI_HandleTypeDef, ptr @hspi1, i32 0, i32 1), align 4, !dbg !225
  store i32 0, ptr getelementptr inbounds (%struct.__SPI_HandleTypeDef, ptr @hspi1, i32 0, i32 1, i32 1), align 4, !dbg !226
  store i32 0, ptr getelementptr inbounds (%struct.__SPI_HandleTypeDef, ptr @hspi1, i32 0, i32 1, i32 2), align 4, !dbg !227
  store i32 0, ptr getelementptr inbounds (%struct.__SPI_HandleTypeDef, ptr @hspi1, i32 0, i32 1, i32 3), align 4, !dbg !228
  store i32 0, ptr getelementptr inbounds (%struct.__SPI_HandleTypeDef, ptr @hspi1, i32 0, i32 1, i32 4), align 4, !dbg !229
  store i32 512, ptr getelementptr inbounds (%struct.__SPI_HandleTypeDef, ptr @hspi1, i32 0, i32 1, i32 5), align 4, !dbg !230
  store i32 0, ptr getelementptr inbounds (%struct.__SPI_HandleTypeDef, ptr @hspi1, i32 0, i32 1, i32 6), align 4, !dbg !231
  store i32 0, ptr getelementptr inbounds (%struct.__SPI_HandleTypeDef, ptr @hspi1, i32 0, i32 1, i32 7), align 4, !dbg !232
  store i32 0, ptr getelementptr inbounds (%struct.__SPI_HandleTypeDef, ptr @hspi1, i32 0, i32 1, i32 8), align 4, !dbg !233
  store i32 0, ptr getelementptr inbounds (%struct.__SPI_HandleTypeDef, ptr @hspi1, i32 0, i32 1, i32 9), align 4, !dbg !234
  store i32 10, ptr getelementptr inbounds (%struct.__SPI_HandleTypeDef, ptr @hspi1, i32 0, i32 1, i32 10), align 4, !dbg !235
  %1 = call i32 @HAL_SPI_Init(ptr noundef @hspi1), !dbg !236
  %2 = icmp ne i32 %1, 0, !dbg !237
  br i1 %2, label %3, label %4, !dbg !236

3:                                                ; preds = %0
  call void asm sideeffect "MX_SPI1_Init_0_FORPUSH:;movt lr, 0x0000;movw lr, 0x080C;push {lr}", ""(), !dbg !238
  call void @Error_Handler(), !dbg !238
  br label %4, !dbg !239

4:                                                ; preds = %3, %0
  ret void, !dbg !240
}

declare dso_local void @MX_USB_HOST_Init() #1

; Function Attrs: noinline nounwind optnone
define internal void @MX_USART2_UART_Init() #0 !dbg !241 {
  store ptr inttoptr (i32 1073759232 to ptr), ptr @huart2, align 4, !dbg !242
  store i32 115200, ptr getelementptr inbounds (%struct.__UART_HandleTypeDef, ptr @huart2, i32 0, i32 1), align 4, !dbg !243
  store i32 0, ptr getelementptr inbounds (%struct.__UART_HandleTypeDef, ptr @huart2, i32 0, i32 1, i32 1), align 4, !dbg !244
  store i32 0, ptr getelementptr inbounds (%struct.__UART_HandleTypeDef, ptr @huart2, i32 0, i32 1, i32 2), align 4, !dbg !245
  store i32 0, ptr getelementptr inbounds (%struct.__UART_HandleTypeDef, ptr @huart2, i32 0, i32 1, i32 3), align 4, !dbg !246
  store i32 12, ptr getelementptr inbounds (%struct.__UART_HandleTypeDef, ptr @huart2, i32 0, i32 1, i32 4), align 4, !dbg !247
  store i32 0, ptr getelementptr inbounds (%struct.__UART_HandleTypeDef, ptr @huart2, i32 0, i32 1, i32 5), align 4, !dbg !248
  store i32 0, ptr getelementptr inbounds (%struct.__UART_HandleTypeDef, ptr @huart2, i32 0, i32 1, i32 6), align 4, !dbg !249
  %1 = call i32 @HAL_UART_Init(ptr noundef @huart2), !dbg !250
  %2 = icmp ne i32 %1, 0, !dbg !251
  br i1 %2, label %3, label %4, !dbg !250

3:                                                ; preds = %0
  call void asm sideeffect "MX_USART2_UART_Init_0_FORPUSH:;movt lr, 0x0000;movw lr, 0x080C;push {lr}", ""(), !dbg !252
  call void @Error_Handler(), !dbg !252
  br label %4, !dbg !253

4:                                                ; preds = %3, %0
  ret void, !dbg !254
}

declare dso_local void @MX_USB_HOST_Process() #1

declare dso_local i32 @printf(ptr noundef, ...) #1

declare dso_local void @HAL_Delay(i32 noundef) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #2

declare dso_local i32 @HAL_RCC_OscConfig(ptr noundef) #1

; Function Attrs: noinline nounwind optnone
define dso_local void @Error_Handler() #0 !dbg !255 {
  call void asm sideeffect "cpsid i", "~{memory}"() #3, !dbg !256, !srcloc !260
  br label %1, !dbg !261

1:                                                ; preds = %1, %0
  br label %1, !dbg !261, !llvm.loop !262
}

declare dso_local i32 @HAL_RCC_ClockConfig(ptr noundef, i32 noundef) #1

declare dso_local i32 @HAL_I2C_Init(ptr noundef) #1

declare dso_local i32 @HAL_I2S_Init(ptr noundef) #1

declare dso_local i32 @HAL_SPI_Init(ptr noundef) #1

declare dso_local i32 @HAL_UART_Init(ptr noundef) #1

declare dso_local void @HAL_GPIO_WritePin(ptr noundef, i16 noundef zeroext, i32 noundef) #1

declare dso_local void @HAL_GPIO_Init(ptr noundef, ptr noundef) #1

define void @MasterForward() {
MasterForward_:
  call void asm sideeffect "PUSH {r0 - r3};            ldr r0, [sp, #16];            ldr r1, [r0];            cmp r1, lr;            BNE fail;            ldr r1, =0x080C0000;            ldr r2, [r1];            str r0, [r2];            add r2, r2, #4;            str r2, [r1];            pop {r0 -r3, lr};            add lr, lr, 4;            ldr lr, [lr];            BX LR;            fail:", ""()
  ret void
}

define void @MasterBackward() {
MasterBackward_:
  call void asm sideeffect "ldr r1, =0x080C0000;            ldr r2, [r1];            add r2, r2, #8;            ldr r3, [r2];            cmp r3, lr;            BNE fail_back;            ldr lr, [r1];            sub r1, r1, 4;            str r1, [r1];            bx lr;            fail_back:", ""()
  ret void
}

attributes #0 = { noinline nounwind optnone "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "clang version 18.0.0 (https://github.com/beerabbit/safestack.git 9e505eddd0ddb64833e98c352f5619f1353db354)", isOptimized: false, runtimeVersion: 0, emissionKind: NoDebug, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "../Core/Src/main.c", directory: "/home/creaker00/safestack/test/noret/Debug")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"min_enum_size", i32 4}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{!"clang version 18.0.0 (https://github.com/beerabbit/safestack.git 9e505eddd0ddb64833e98c352f5619f1353db354)"}
!7 = distinct !DISubprogram(name: "__io_putchar", scope: !1, file: !1, line: 74, type: !8, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!8 = !DISubroutineType(types: !9)
!9 = !{}
!10 = !DILocation(line: 76, column: 13, scope: !7)
!11 = !DILocation(line: 77, column: 13, scope: !7)
!12 = !DILocation(line: 77, column: 6, scope: !7)
!13 = distinct !DISubprogram(name: "function_a", scope: !1, file: !1, line: 81, type: !8, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!14 = !DILocation(line: 83, column: 15, scope: !13)
!15 = !DILocation(line: 83, column: 17, scope: !13)
!16 = !DILocation(line: 83, column: 16, scope: !13)
!17 = !DILocation(line: 83, column: 19, scope: !13)
!18 = !DILocation(line: 83, column: 18, scope: !13)
!19 = !DILocation(line: 83, column: 7, scope: !13)
!20 = !DILocation(line: 85, column: 35, scope: !13)
!21 = !DILocation(line: 85, column: 16, scope: !13)
!22 = !DILocation(line: 85, column: 7, scope: !13)
!23 = !DILocation(line: 88, column: 9, scope: !13)
!24 = !DILocation(line: 88, column: 2, scope: !13)
!25 = distinct !DISubprogram(name: "function_b", scope: !1, file: !1, line: 91, type: !8, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!26 = !DILocation(line: 93, column: 15, scope: !25)
!27 = !DILocation(line: 93, column: 17, scope: !25)
!28 = !DILocation(line: 93, column: 16, scope: !25)
!29 = !DILocation(line: 93, column: 19, scope: !25)
!30 = !DILocation(line: 93, column: 18, scope: !25)
!31 = !DILocation(line: 93, column: 21, scope: !25)
!32 = !DILocation(line: 93, column: 20, scope: !25)
!33 = !DILocation(line: 93, column: 23, scope: !25)
!34 = !DILocation(line: 93, column: 22, scope: !25)
!35 = !DILocation(line: 93, column: 7, scope: !25)
!36 = !DILocation(line: 95, column: 9, scope: !25)
!37 = !DILocation(line: 95, column: 2, scope: !25)
!38 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 118, type: !8, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!39 = !DILocation(line: 127, column: 3, scope: !38)
!40 = !DILocation(line: 134, column: 3, scope: !38)
!41 = !DILocation(line: 141, column: 3, scope: !38)
!42 = !DILocation(line: 142, column: 3, scope: !38)
!43 = !DILocation(line: 143, column: 3, scope: !38)
!44 = !DILocation(line: 144, column: 3, scope: !38)
!45 = !DILocation(line: 145, column: 3, scope: !38)
!46 = !DILocation(line: 146, column: 3, scope: !38)
!47 = !DILocation(line: 152, column: 7, scope: !38)
!48 = !DILocation(line: 153, column: 3, scope: !38)
!49 = !DILocation(line: 156, column: 5, scope: !38)
!50 = !DILocation(line: 157, column: 20, scope: !38)
!51 = !DILocation(line: 157, column: 2, scope: !38)
!52 = !DILocation(line: 158, column: 13, scope: !38)
!53 = !DILocation(line: 158, column: 7, scope: !38)
!54 = !DILocation(line: 159, column: 8, scope: !38)
!55 = !DILocation(line: 160, column: 3, scope: !38)
!56 = distinct !{!56, !48, !57}
!57 = !DILocation(line: 162, column: 3, scope: !38)
!58 = distinct !DISubprogram(name: "SystemClock_Config", scope: !1, file: !1, line: 170, type: !8, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!59 = !DILocation(line: 172, column: 22, scope: !58)
!60 = !DILocation(line: 173, column: 22, scope: !58)
!61 = !DILocation(line: 177, column: 3, scope: !58)
!62 = !DILocation(line: 178, column: 3, scope: !58)
!63 = !DILocation(line: 183, column: 21, scope: !58)
!64 = !DILocation(line: 183, column: 36, scope: !58)
!65 = !DILocation(line: 184, column: 21, scope: !58)
!66 = !DILocation(line: 184, column: 30, scope: !58)
!67 = !DILocation(line: 185, column: 21, scope: !58)
!68 = !DILocation(line: 185, column: 25, scope: !58)
!69 = !DILocation(line: 185, column: 34, scope: !58)
!70 = !DILocation(line: 186, column: 21, scope: !58)
!71 = !DILocation(line: 186, column: 25, scope: !58)
!72 = !DILocation(line: 186, column: 35, scope: !58)
!73 = !DILocation(line: 187, column: 21, scope: !58)
!74 = !DILocation(line: 187, column: 25, scope: !58)
!75 = !DILocation(line: 187, column: 30, scope: !58)
!76 = !DILocation(line: 188, column: 21, scope: !58)
!77 = !DILocation(line: 188, column: 25, scope: !58)
!78 = !DILocation(line: 188, column: 30, scope: !58)
!79 = !DILocation(line: 189, column: 21, scope: !58)
!80 = !DILocation(line: 189, column: 25, scope: !58)
!81 = !DILocation(line: 189, column: 30, scope: !58)
!82 = !DILocation(line: 190, column: 21, scope: !58)
!83 = !DILocation(line: 190, column: 25, scope: !58)
!84 = !DILocation(line: 190, column: 30, scope: !58)
!85 = !DILocation(line: 191, column: 7, scope: !58)
!86 = !DILocation(line: 191, column: 45, scope: !58)
!87 = !DILocation(line: 193, column: 5, scope: !58)
!88 = !DILocation(line: 194, column: 3, scope: !58)
!89 = !DILocation(line: 198, column: 21, scope: !58)
!90 = !DILocation(line: 198, column: 31, scope: !58)
!91 = !DILocation(line: 200, column: 21, scope: !58)
!92 = !DILocation(line: 200, column: 34, scope: !58)
!93 = !DILocation(line: 201, column: 21, scope: !58)
!94 = !DILocation(line: 201, column: 35, scope: !58)
!95 = !DILocation(line: 202, column: 21, scope: !58)
!96 = !DILocation(line: 202, column: 36, scope: !58)
!97 = !DILocation(line: 203, column: 21, scope: !58)
!98 = !DILocation(line: 203, column: 36, scope: !58)
!99 = !DILocation(line: 205, column: 7, scope: !58)
!100 = !DILocation(line: 205, column: 64, scope: !58)
!101 = !DILocation(line: 207, column: 5, scope: !58)
!102 = !DILocation(line: 208, column: 3, scope: !58)
!103 = !DILocation(line: 209, column: 1, scope: !58)
!104 = distinct !DISubprogram(name: "MX_GPIO_Init", scope: !1, file: !1, line: 355, type: !8, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0)
!105 = !DILocation(line: 357, column: 20, scope: !104)
!106 = !DILocation(line: 360, column: 3, scope: !104)
!107 = !DILocation(line: 361, column: 3, scope: !104)
!108 = !DILocation(line: 362, column: 3, scope: !104)
!109 = !DILocation(line: 363, column: 3, scope: !104)
!110 = !DILocation(line: 364, column: 3, scope: !104)
!111 = !DILocation(line: 365, column: 3, scope: !104)
!112 = !DILocation(line: 368, column: 3, scope: !104)
!113 = !DILocation(line: 371, column: 3, scope: !104)
!114 = !DILocation(line: 374, column: 3, scope: !104)
!115 = !DILocation(line: 378, column: 19, scope: !104)
!116 = !DILocation(line: 378, column: 23, scope: !104)
!117 = !DILocation(line: 379, column: 19, scope: !104)
!118 = !DILocation(line: 379, column: 24, scope: !104)
!119 = !DILocation(line: 380, column: 19, scope: !104)
!120 = !DILocation(line: 380, column: 24, scope: !104)
!121 = !DILocation(line: 381, column: 19, scope: !104)
!122 = !DILocation(line: 381, column: 25, scope: !104)
!123 = !DILocation(line: 382, column: 3, scope: !104)
!124 = !DILocation(line: 385, column: 19, scope: !104)
!125 = !DILocation(line: 385, column: 23, scope: !104)
!126 = !DILocation(line: 386, column: 19, scope: !104)
!127 = !DILocation(line: 386, column: 24, scope: !104)
!128 = !DILocation(line: 387, column: 19, scope: !104)
!129 = !DILocation(line: 387, column: 24, scope: !104)
!130 = !DILocation(line: 388, column: 19, scope: !104)
!131 = !DILocation(line: 388, column: 25, scope: !104)
!132 = !DILocation(line: 389, column: 3, scope: !104)
!133 = !DILocation(line: 392, column: 19, scope: !104)
!134 = !DILocation(line: 392, column: 23, scope: !104)
!135 = !DILocation(line: 393, column: 19, scope: !104)
!136 = !DILocation(line: 393, column: 24, scope: !104)
!137 = !DILocation(line: 394, column: 19, scope: !104)
!138 = !DILocation(line: 394, column: 24, scope: !104)
!139 = !DILocation(line: 395, column: 19, scope: !104)
!140 = !DILocation(line: 395, column: 25, scope: !104)
!141 = !DILocation(line: 396, column: 19, scope: !104)
!142 = !DILocation(line: 396, column: 29, scope: !104)
!143 = !DILocation(line: 397, column: 3, scope: !104)
!144 = !DILocation(line: 400, column: 19, scope: !104)
!145 = !DILocation(line: 400, column: 23, scope: !104)
!146 = !DILocation(line: 401, column: 19, scope: !104)
!147 = !DILocation(line: 401, column: 24, scope: !104)
!148 = !DILocation(line: 402, column: 19, scope: !104)
!149 = !DILocation(line: 402, column: 24, scope: !104)
!150 = !DILocation(line: 403, column: 3, scope: !104)
!151 = !DILocation(line: 406, column: 19, scope: !104)
!152 = !DILocation(line: 406, column: 23, scope: !104)
!153 = !DILocation(line: 407, column: 19, scope: !104)
!154 = !DILocation(line: 407, column: 24, scope: !104)
!155 = !DILocation(line: 408, column: 19, scope: !104)
!156 = !DILocation(line: 408, column: 24, scope: !104)
!157 = !DILocation(line: 409, column: 3, scope: !104)
!158 = !DILocation(line: 412, column: 19, scope: !104)
!159 = !DILocation(line: 412, column: 23, scope: !104)
!160 = !DILocation(line: 413, column: 19, scope: !104)
!161 = !DILocation(line: 413, column: 24, scope: !104)
!162 = !DILocation(line: 414, column: 19, scope: !104)
!163 = !DILocation(line: 414, column: 24, scope: !104)
!164 = !DILocation(line: 415, column: 19, scope: !104)
!165 = !DILocation(line: 415, column: 25, scope: !104)
!166 = !DILocation(line: 416, column: 19, scope: !104)
!167 = !DILocation(line: 416, column: 29, scope: !104)
!168 = !DILocation(line: 417, column: 3, scope: !104)
!169 = !DILocation(line: 421, column: 19, scope: !104)
!170 = !DILocation(line: 421, column: 23, scope: !104)
!171 = !DILocation(line: 423, column: 19, scope: !104)
!172 = !DILocation(line: 423, column: 24, scope: !104)
!173 = !DILocation(line: 424, column: 19, scope: !104)
!174 = !DILocation(line: 424, column: 24, scope: !104)
!175 = !DILocation(line: 425, column: 19, scope: !104)
!176 = !DILocation(line: 425, column: 25, scope: !104)
!177 = !DILocation(line: 426, column: 3, scope: !104)
!178 = !DILocation(line: 429, column: 19, scope: !104)
!179 = !DILocation(line: 429, column: 23, scope: !104)
!180 = !DILocation(line: 430, column: 19, scope: !104)
!181 = !DILocation(line: 430, column: 24, scope: !104)
!182 = !DILocation(line: 431, column: 19, scope: !104)
!183 = !DILocation(line: 431, column: 24, scope: !104)
!184 = !DILocation(line: 432, column: 3, scope: !104)
!185 = !DILocation(line: 435, column: 19, scope: !104)
!186 = !DILocation(line: 435, column: 23, scope: !104)
!187 = !DILocation(line: 436, column: 19, scope: !104)
!188 = !DILocation(line: 436, column: 24, scope: !104)
!189 = !DILocation(line: 437, column: 19, scope: !104)
!190 = !DILocation(line: 437, column: 24, scope: !104)
!191 = !DILocation(line: 438, column: 3, scope: !104)
!192 = !DILocation(line: 440, column: 1, scope: !104)
!193 = distinct !DISubprogram(name: "MX_I2C1_Init", scope: !1, file: !1, line: 216, type: !8, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0)
!194 = !DILocation(line: 226, column: 18, scope: !193)
!195 = !DILocation(line: 227, column: 25, scope: !193)
!196 = !DILocation(line: 228, column: 24, scope: !193)
!197 = !DILocation(line: 229, column: 26, scope: !193)
!198 = !DILocation(line: 230, column: 29, scope: !193)
!199 = !DILocation(line: 231, column: 30, scope: !193)
!200 = !DILocation(line: 232, column: 26, scope: !193)
!201 = !DILocation(line: 233, column: 30, scope: !193)
!202 = !DILocation(line: 234, column: 28, scope: !193)
!203 = !DILocation(line: 235, column: 7, scope: !193)
!204 = !DILocation(line: 235, column: 28, scope: !193)
!205 = !DILocation(line: 237, column: 5, scope: !193)
!206 = !DILocation(line: 238, column: 3, scope: !193)
!207 = !DILocation(line: 243, column: 1, scope: !193)
!208 = distinct !DISubprogram(name: "MX_I2S3_Init", scope: !1, file: !1, line: 250, type: !8, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0)
!209 = !DILocation(line: 260, column: 18, scope: !208)
!210 = !DILocation(line: 261, column: 19, scope: !208)
!211 = !DILocation(line: 262, column: 23, scope: !208)
!212 = !DILocation(line: 263, column: 25, scope: !208)
!213 = !DILocation(line: 264, column: 25, scope: !208)
!214 = !DILocation(line: 265, column: 24, scope: !208)
!215 = !DILocation(line: 266, column: 19, scope: !208)
!216 = !DILocation(line: 267, column: 26, scope: !208)
!217 = !DILocation(line: 268, column: 29, scope: !208)
!218 = !DILocation(line: 269, column: 7, scope: !208)
!219 = !DILocation(line: 269, column: 28, scope: !208)
!220 = !DILocation(line: 271, column: 5, scope: !208)
!221 = !DILocation(line: 272, column: 3, scope: !208)
!222 = !DILocation(line: 277, column: 1, scope: !208)
!223 = distinct !DISubprogram(name: "MX_SPI1_Init", scope: !1, file: !1, line: 284, type: !8, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0)
!224 = !DILocation(line: 295, column: 18, scope: !223)
!225 = !DILocation(line: 296, column: 19, scope: !223)
!226 = !DILocation(line: 297, column: 24, scope: !223)
!227 = !DILocation(line: 298, column: 23, scope: !223)
!228 = !DILocation(line: 299, column: 26, scope: !223)
!229 = !DILocation(line: 300, column: 23, scope: !223)
!230 = !DILocation(line: 301, column: 18, scope: !223)
!231 = !DILocation(line: 302, column: 32, scope: !223)
!232 = !DILocation(line: 303, column: 23, scope: !223)
!233 = !DILocation(line: 304, column: 21, scope: !223)
!234 = !DILocation(line: 305, column: 29, scope: !223)
!235 = !DILocation(line: 306, column: 28, scope: !223)
!236 = !DILocation(line: 307, column: 7, scope: !223)
!237 = !DILocation(line: 307, column: 28, scope: !223)
!238 = !DILocation(line: 309, column: 5, scope: !223)
!239 = !DILocation(line: 310, column: 3, scope: !223)
!240 = !DILocation(line: 315, column: 1, scope: !223)
!241 = distinct !DISubprogram(name: "MX_USART2_UART_Init", scope: !1, file: !1, line: 322, type: !8, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0)
!242 = !DILocation(line: 332, column: 19, scope: !241)
!243 = !DILocation(line: 333, column: 24, scope: !241)
!244 = !DILocation(line: 334, column: 26, scope: !241)
!245 = !DILocation(line: 335, column: 24, scope: !241)
!246 = !DILocation(line: 336, column: 22, scope: !241)
!247 = !DILocation(line: 337, column: 20, scope: !241)
!248 = !DILocation(line: 338, column: 25, scope: !241)
!249 = !DILocation(line: 339, column: 28, scope: !241)
!250 = !DILocation(line: 340, column: 7, scope: !241)
!251 = !DILocation(line: 340, column: 30, scope: !241)
!252 = !DILocation(line: 342, column: 5, scope: !241)
!253 = !DILocation(line: 343, column: 3, scope: !241)
!254 = !DILocation(line: 348, column: 1, scope: !241)
!255 = distinct !DISubprogram(name: "Error_Handler", scope: !1, file: !1, line: 450, type: !8, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!256 = !DILocation(line: 142, column: 3, scope: !257, inlinedAt: !259)
!257 = distinct !DISubprogram(name: "__disable_irq", scope: !258, file: !258, line: 140, type: !8, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0)
!258 = !DIFile(filename: "../Drivers/CMSIS/Include/cmsis_gcc.h", directory: "/home/creaker00/safestack/test/noret/Debug")
!259 = distinct !DILocation(line: 454, column: 3, scope: !255)
!260 = !{i64 1696146}
!261 = !DILocation(line: 455, column: 3, scope: !255)
!262 = distinct !{!262, !261, !263}
!263 = !DILocation(line: 457, column: 3, scope: !255)
