; ModuleID = '../Core/Src/syscalls.c'
source_filename = "../Core/Src/syscalls.c"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }

@__env = dso_local global [1 x ptr] zeroinitializer, align 4
@environ = dso_local global ptr @__env, align 4

; Function Attrs: noinline nounwind optnone
define dso_local void @initialise_monitor_handles() #0 !dbg !7 {
  ret void, !dbg !10
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @_getpid() #0 !dbg !11 {
  ret i32 1, !dbg !12
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) #0 !dbg !13 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, ptr %3, align 4
  store i32 %1, ptr %4, align 4
  %5 = load i32, ptr %3, align 4, !dbg !14
  %6 = load i32, ptr %4, align 4, !dbg !15
  %7 = call ptr @__errno(), !dbg !16
  store i32 22, ptr %7, align 4, !dbg !17
  ret i32 -1, !dbg !18
}

declare dso_local ptr @__errno() #1

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @_exit(i32 noundef %0) #2 !dbg !19 {
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  %3 = load i32, ptr %2, align 4, !dbg !20
  %4 = call i32 @_kill(i32 noundef %3, i32 noundef -1), !dbg !21
  br label %5, !dbg !22

5:                                                ; preds = %1, %5
  br label %5, !dbg !22, !llvm.loop !23
}

; Function Attrs: noinline nounwind optnone
define weak dso_local i32 @_read(i32 noundef %0, ptr noundef %1, i32 noundef %2) #0 !dbg !25 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, ptr %4, align 4
  store ptr %1, ptr %5, align 4
  store i32 %2, ptr %6, align 4
  %8 = load i32, ptr %4, align 4, !dbg !26
  store i32 0, ptr %7, align 4, !dbg !27
  br label %9, !dbg !28

9:                                                ; preds = %18, %3
  %10 = load i32, ptr %7, align 4, !dbg !29
  %11 = load i32, ptr %6, align 4, !dbg !30
  %12 = icmp slt i32 %10, %11, !dbg !31
  br i1 %12, label %13, label %21, !dbg !32

13:                                               ; preds = %9
  %14 = call i32 @__io_getchar(), !dbg !33
  %15 = trunc i32 %14 to i8, !dbg !33
  %16 = load ptr, ptr %5, align 4, !dbg !34
  %17 = getelementptr inbounds i8, ptr %16, i32 1, !dbg !34
  store ptr %17, ptr %5, align 4, !dbg !34
  store i8 %15, ptr %16, align 1, !dbg !35
  br label %18, !dbg !36

18:                                               ; preds = %13
  %19 = load i32, ptr %7, align 4, !dbg !37
  %20 = add nsw i32 %19, 1, !dbg !37
  store i32 %20, ptr %7, align 4, !dbg !37
  br label %9, !dbg !32, !llvm.loop !38

21:                                               ; preds = %9
  %22 = load i32, ptr %6, align 4, !dbg !40
  ret i32 %22, !dbg !41
}

declare extern_weak dso_local i32 @__io_getchar() #1

; Function Attrs: noinline nounwind optnone
define weak dso_local i32 @_write(i32 noundef %0, ptr noundef %1, i32 noundef %2) #0 !dbg !42 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, ptr %4, align 4
  store ptr %1, ptr %5, align 4
  store i32 %2, ptr %6, align 4
  %8 = load i32, ptr %4, align 4, !dbg !43
  store i32 0, ptr %7, align 4, !dbg !44
  br label %9, !dbg !45

9:                                                ; preds = %19, %3
  %10 = load i32, ptr %7, align 4, !dbg !46
  %11 = load i32, ptr %6, align 4, !dbg !47
  %12 = icmp slt i32 %10, %11, !dbg !48
  br i1 %12, label %13, label %22, !dbg !49

13:                                               ; preds = %9
  %14 = load ptr, ptr %5, align 4, !dbg !50
  %15 = getelementptr inbounds i8, ptr %14, i32 1, !dbg !50
  store ptr %15, ptr %5, align 4, !dbg !50
  %16 = load i8, ptr %14, align 1, !dbg !51
  %17 = zext i8 %16 to i32, !dbg !51
  %18 = call i32 @__io_putchar(i32 noundef %17), !dbg !52
  br label %19, !dbg !53

19:                                               ; preds = %13
  %20 = load i32, ptr %7, align 4, !dbg !54
  %21 = add nsw i32 %20, 1, !dbg !54
  store i32 %21, ptr %7, align 4, !dbg !54
  br label %9, !dbg !49, !llvm.loop !55

22:                                               ; preds = %9
  %23 = load i32, ptr %6, align 4, !dbg !56
  ret i32 %23, !dbg !57
}

declare extern_weak dso_local i32 @__io_putchar(i32 noundef) #1

; Function Attrs: noinline nounwind optnone
define dso_local i32 @_close(i32 noundef %0) #0 !dbg !58 {
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  %3 = load i32, ptr %2, align 4, !dbg !59
  ret i32 -1, !dbg !60
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @_fstat(i32 noundef %0, ptr noundef %1) #0 !dbg !61 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 4
  store i32 %0, ptr %3, align 4
  store ptr %1, ptr %4, align 4
  %5 = load i32, ptr %3, align 4, !dbg !62
  %6 = load ptr, ptr %4, align 4, !dbg !63
  %7 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 2, !dbg !64
  store i32 8192, ptr %7, align 4, !dbg !65
  ret i32 0, !dbg !66
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @_isatty(i32 noundef %0) #0 !dbg !67 {
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  %3 = load i32, ptr %2, align 4, !dbg !68
  ret i32 1, !dbg !69
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) #0 !dbg !70 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, ptr %4, align 4
  store i32 %1, ptr %5, align 4
  store i32 %2, ptr %6, align 4
  %7 = load i32, ptr %4, align 4, !dbg !71
  %8 = load i32, ptr %5, align 4, !dbg !72
  %9 = load i32, ptr %6, align 4, !dbg !73
  ret i32 0, !dbg !74
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @_open(ptr noundef %0, i32 noundef %1, ...) #0 !dbg !75 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 4
  store i32 %1, ptr %4, align 4
  %5 = load ptr, ptr %3, align 4, !dbg !76
  %6 = load i32, ptr %4, align 4, !dbg !77
  ret i32 -1, !dbg !78
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @_wait(ptr noundef %0) #0 !dbg !79 {
  %2 = alloca ptr, align 4
  store ptr %0, ptr %2, align 4
  %3 = load ptr, ptr %2, align 4, !dbg !80
  %4 = call ptr @__errno(), !dbg !81
  store i32 10, ptr %4, align 4, !dbg !82
  ret i32 -1, !dbg !83
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @_unlink(ptr noundef %0) #0 !dbg !84 {
  %2 = alloca ptr, align 4
  store ptr %0, ptr %2, align 4
  %3 = load ptr, ptr %2, align 4, !dbg !85
  %4 = call ptr @__errno(), !dbg !86
  store i32 2, ptr %4, align 4, !dbg !87
  ret i32 -1, !dbg !88
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @_times(ptr noundef %0) #0 !dbg !89 {
  %2 = alloca ptr, align 4
  store ptr %0, ptr %2, align 4
  %3 = load ptr, ptr %2, align 4, !dbg !90
  ret i32 -1, !dbg !91
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @_stat(ptr noundef %0, ptr noundef %1) #0 !dbg !92 {
  %3 = alloca ptr, align 4
  %4 = alloca ptr, align 4
  store ptr %0, ptr %3, align 4
  store ptr %1, ptr %4, align 4
  %5 = load ptr, ptr %3, align 4, !dbg !93
  %6 = load ptr, ptr %4, align 4, !dbg !94
  %7 = getelementptr inbounds %struct.stat, ptr %6, i32 0, i32 2, !dbg !95
  store i32 8192, ptr %7, align 4, !dbg !96
  ret i32 0, !dbg !97
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @_link(ptr noundef %0, ptr noundef %1) #0 !dbg !98 {
  %3 = alloca ptr, align 4
  %4 = alloca ptr, align 4
  store ptr %0, ptr %3, align 4
  store ptr %1, ptr %4, align 4
  %5 = load ptr, ptr %3, align 4, !dbg !99
  %6 = load ptr, ptr %4, align 4, !dbg !100
  %7 = call ptr @__errno(), !dbg !101
  store i32 31, ptr %7, align 4, !dbg !102
  ret i32 -1, !dbg !103
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @_fork() #0 !dbg !104 {
  %1 = call ptr @__errno(), !dbg !105
  store i32 11, ptr %1, align 4, !dbg !106
  ret i32 -1, !dbg !107
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @_execve(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 !dbg !108 {
  %4 = alloca ptr, align 4
  %5 = alloca ptr, align 4
  %6 = alloca ptr, align 4
  store ptr %0, ptr %4, align 4
  store ptr %1, ptr %5, align 4
  store ptr %2, ptr %6, align 4
  %7 = load ptr, ptr %4, align 4, !dbg !109
  %8 = load ptr, ptr %5, align 4, !dbg !110
  %9 = load ptr, ptr %6, align 4, !dbg !111
  %10 = call ptr @__errno(), !dbg !112
  store i32 12, ptr %10, align 4, !dbg !113
  ret i32 -1, !dbg !114
}

attributes #0 = { noinline nounwind optnone "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #2 = { noinline noreturn nounwind optnone "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "clang version 18.0.0 (https://github.com/beerabbit/safestack.git f70f7242ad3dc55fc7dd91601ac39ce3e54a1096)", isOptimized: false, runtimeVersion: 0, emissionKind: NoDebug, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "../Core/Src/syscalls.c", directory: "/home/creaker00/safestack/test/origin/Debug")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"min_enum_size", i32 4}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{!"clang version 18.0.0 (https://github.com/beerabbit/safestack.git f70f7242ad3dc55fc7dd91601ac39ce3e54a1096)"}
!7 = distinct !DISubprogram(name: "initialise_monitor_handles", scope: !1, file: !1, line: 44, type: !8, scopeLine: 45, spFlags: DISPFlagDefinition, unit: !0)
!8 = !DISubroutineType(types: !9)
!9 = !{}
!10 = !DILocation(line: 46, column: 1, scope: !7)
!11 = distinct !DISubprogram(name: "_getpid", scope: !1, file: !1, line: 48, type: !8, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!12 = !DILocation(line: 50, column: 3, scope: !11)
!13 = distinct !DISubprogram(name: "_kill", scope: !1, file: !1, line: 53, type: !8, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!14 = !DILocation(line: 55, column: 9, scope: !13)
!15 = !DILocation(line: 56, column: 9, scope: !13)
!16 = !DILocation(line: 57, column: 3, scope: !13)
!17 = !DILocation(line: 57, column: 9, scope: !13)
!18 = !DILocation(line: 58, column: 3, scope: !13)
!19 = distinct !DISubprogram(name: "_exit", scope: !1, file: !1, line: 61, type: !8, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!20 = !DILocation(line: 63, column: 9, scope: !19)
!21 = !DILocation(line: 63, column: 3, scope: !19)
!22 = !DILocation(line: 64, column: 3, scope: !19)
!23 = distinct !{!23, !22, !24}
!24 = !DILocation(line: 64, column: 14, scope: !19)
!25 = distinct !DISubprogram(name: "_read", scope: !1, file: !1, line: 67, type: !8, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!26 = !DILocation(line: 69, column: 9, scope: !25)
!27 = !DILocation(line: 72, column: 16, scope: !25)
!28 = !DILocation(line: 72, column: 8, scope: !25)
!29 = !DILocation(line: 72, column: 21, scope: !25)
!30 = !DILocation(line: 72, column: 31, scope: !25)
!31 = !DILocation(line: 72, column: 29, scope: !25)
!32 = !DILocation(line: 72, column: 3, scope: !25)
!33 = !DILocation(line: 74, column: 14, scope: !25)
!34 = !DILocation(line: 74, column: 9, scope: !25)
!35 = !DILocation(line: 74, column: 12, scope: !25)
!36 = !DILocation(line: 75, column: 3, scope: !25)
!37 = !DILocation(line: 72, column: 43, scope: !25)
!38 = distinct !{!38, !32, !36, !39}
!39 = !{!"llvm.loop.mustprogress"}
!40 = !DILocation(line: 77, column: 10, scope: !25)
!41 = !DILocation(line: 77, column: 3, scope: !25)
!42 = distinct !DISubprogram(name: "_write", scope: !1, file: !1, line: 80, type: !8, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!43 = !DILocation(line: 82, column: 9, scope: !42)
!44 = !DILocation(line: 85, column: 16, scope: !42)
!45 = !DILocation(line: 85, column: 8, scope: !42)
!46 = !DILocation(line: 85, column: 21, scope: !42)
!47 = !DILocation(line: 85, column: 31, scope: !42)
!48 = !DILocation(line: 85, column: 29, scope: !42)
!49 = !DILocation(line: 85, column: 3, scope: !42)
!50 = !DILocation(line: 87, column: 22, scope: !42)
!51 = !DILocation(line: 87, column: 18, scope: !42)
!52 = !DILocation(line: 87, column: 5, scope: !42)
!53 = !DILocation(line: 88, column: 3, scope: !42)
!54 = !DILocation(line: 85, column: 43, scope: !42)
!55 = distinct !{!55, !49, !53, !39}
!56 = !DILocation(line: 89, column: 10, scope: !42)
!57 = !DILocation(line: 89, column: 3, scope: !42)
!58 = distinct !DISubprogram(name: "_close", scope: !1, file: !1, line: 92, type: !8, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!59 = !DILocation(line: 94, column: 9, scope: !58)
!60 = !DILocation(line: 95, column: 3, scope: !58)
!61 = distinct !DISubprogram(name: "_fstat", scope: !1, file: !1, line: 99, type: !8, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!62 = !DILocation(line: 101, column: 9, scope: !61)
!63 = !DILocation(line: 102, column: 3, scope: !61)
!64 = !DILocation(line: 102, column: 7, scope: !61)
!65 = !DILocation(line: 102, column: 15, scope: !61)
!66 = !DILocation(line: 103, column: 3, scope: !61)
!67 = distinct !DISubprogram(name: "_isatty", scope: !1, file: !1, line: 106, type: !8, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!68 = !DILocation(line: 108, column: 9, scope: !67)
!69 = !DILocation(line: 109, column: 3, scope: !67)
!70 = distinct !DISubprogram(name: "_lseek", scope: !1, file: !1, line: 112, type: !8, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!71 = !DILocation(line: 114, column: 9, scope: !70)
!72 = !DILocation(line: 115, column: 9, scope: !70)
!73 = !DILocation(line: 116, column: 9, scope: !70)
!74 = !DILocation(line: 117, column: 3, scope: !70)
!75 = distinct !DISubprogram(name: "_open", scope: !1, file: !1, line: 120, type: !8, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!76 = !DILocation(line: 122, column: 9, scope: !75)
!77 = !DILocation(line: 123, column: 9, scope: !75)
!78 = !DILocation(line: 125, column: 3, scope: !75)
!79 = distinct !DISubprogram(name: "_wait", scope: !1, file: !1, line: 128, type: !8, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!80 = !DILocation(line: 130, column: 9, scope: !79)
!81 = !DILocation(line: 131, column: 3, scope: !79)
!82 = !DILocation(line: 131, column: 9, scope: !79)
!83 = !DILocation(line: 132, column: 3, scope: !79)
!84 = distinct !DISubprogram(name: "_unlink", scope: !1, file: !1, line: 135, type: !8, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!85 = !DILocation(line: 137, column: 9, scope: !84)
!86 = !DILocation(line: 138, column: 3, scope: !84)
!87 = !DILocation(line: 138, column: 9, scope: !84)
!88 = !DILocation(line: 139, column: 3, scope: !84)
!89 = distinct !DISubprogram(name: "_times", scope: !1, file: !1, line: 142, type: !8, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!90 = !DILocation(line: 144, column: 9, scope: !89)
!91 = !DILocation(line: 145, column: 3, scope: !89)
!92 = distinct !DISubprogram(name: "_stat", scope: !1, file: !1, line: 148, type: !8, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!93 = !DILocation(line: 150, column: 9, scope: !92)
!94 = !DILocation(line: 151, column: 3, scope: !92)
!95 = !DILocation(line: 151, column: 7, scope: !92)
!96 = !DILocation(line: 151, column: 15, scope: !92)
!97 = !DILocation(line: 152, column: 3, scope: !92)
!98 = distinct !DISubprogram(name: "_link", scope: !1, file: !1, line: 155, type: !8, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!99 = !DILocation(line: 157, column: 9, scope: !98)
!100 = !DILocation(line: 158, column: 9, scope: !98)
!101 = !DILocation(line: 159, column: 3, scope: !98)
!102 = !DILocation(line: 159, column: 9, scope: !98)
!103 = !DILocation(line: 160, column: 3, scope: !98)
!104 = distinct !DISubprogram(name: "_fork", scope: !1, file: !1, line: 163, type: !8, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!105 = !DILocation(line: 165, column: 3, scope: !104)
!106 = !DILocation(line: 165, column: 9, scope: !104)
!107 = !DILocation(line: 166, column: 3, scope: !104)
!108 = distinct !DISubprogram(name: "_execve", scope: !1, file: !1, line: 169, type: !8, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!109 = !DILocation(line: 171, column: 9, scope: !108)
!110 = !DILocation(line: 172, column: 9, scope: !108)
!111 = !DILocation(line: 173, column: 9, scope: !108)
!112 = !DILocation(line: 174, column: 3, scope: !108)
!113 = !DILocation(line: 174, column: 9, scope: !108)
!114 = !DILocation(line: 175, column: 3, scope: !108)
