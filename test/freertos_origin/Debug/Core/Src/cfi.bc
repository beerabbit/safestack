; ModuleID = '../Core/Src/cfi.c'
source_filename = "../Core/Src/cfi.c"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.tskTaskControlBlock = type { ptr, %struct.xLIST_ITEM, %struct.xLIST_ITEM, i32, ptr, [16 x i8], i32, i32, i32, i32, %struct._reent, i32, i8, i8 }
%struct.xLIST_ITEM = type { i32, ptr, ptr, ptr, ptr }
%struct._reent = type { i32, ptr, ptr, ptr, i32, [25 x i8], i32, ptr, i32, ptr, ptr, i32, ptr, ptr, i32, ptr, %union.anon, ptr, %struct._atexit, ptr, %struct._glue, [3 x %struct.__sFILE] }
%union.anon = type { %struct.anon, [32 x i8] }
%struct.anon = type { i32, ptr, [26 x i8], %struct.__tm, i32, i64, %struct._rand48, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], [24 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, i32 }
%struct.__tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._rand48 = type { [3 x i16], [3 x i16], i16 }
%struct._mbstate_t = type { i32, %union.anon.0 }
%union.anon.0 = type { i32 }
%struct._atexit = type { ptr, i32, [32 x ptr], %struct._on_exit_args }
%struct._on_exit_args = type { [32 x ptr], [32 x ptr], i32, i32 }
%struct._glue = type { ptr, i32, ptr }
%struct.__sFILE = type { ptr, i32, i32, i16, i16, %struct.__sbuf, i32, ptr, ptr, ptr, ptr, ptr, %struct.__sbuf, ptr, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, ptr, i32, %struct._mbstate_t, i32 }
%struct.__sbuf = type { ptr, i32 }

@pxCurrentTCB = external dso_local global ptr, align 4

; Function Attrs: noinline nounwind optnone
define dso_local void @forward(i32 noundef %0, i32 noundef %1) #0 !dbg !7 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 4
  %6 = alloca ptr, align 4
  store i32 %0, ptr %3, align 4
  store i32 %1, ptr %4, align 4
  %7 = load i32, ptr %4, align 4, !dbg !10
  %8 = mul i32 %7, 4, !dbg !11
  %9 = add i32 536936492, %8, !dbg !12
  %10 = inttoptr i32 %9 to ptr, !dbg !13
  store ptr %10, ptr %5, align 4, !dbg !14
  %11 = load ptr, ptr %5, align 4, !dbg !15
  %12 = load i32, ptr %11, align 4, !dbg !16
  %13 = inttoptr i32 %12 to ptr, !dbg !17
  store ptr %13, ptr %6, align 4, !dbg !18
  %14 = load i32, ptr %3, align 4, !dbg !19
  %15 = load ptr, ptr %6, align 4, !dbg !20
  store i32 %14, ptr %15, align 4, !dbg !21
  %16 = load ptr, ptr %6, align 4, !dbg !22
  %17 = getelementptr inbounds i32, ptr %16, i32 1, !dbg !22
  store ptr %17, ptr %6, align 4, !dbg !22
  %18 = load ptr, ptr %6, align 4, !dbg !23
  %19 = ptrtoint ptr %18 to i32, !dbg !24
  %20 = load ptr, ptr %5, align 4, !dbg !25
  store i32 %19, ptr %20, align 4, !dbg !26
  ret void, !dbg !27
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @backward(i32 noundef %0, i32 noundef %1) #0 !dbg !28 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 4
  %8 = alloca ptr, align 4
  store i32 %0, ptr %4, align 4
  store i32 %1, ptr %5, align 4
  %9 = load i32, ptr %5, align 4, !dbg !29
  %10 = mul i32 %9, 4, !dbg !30
  %11 = add i32 536936492, %10, !dbg !31
  %12 = inttoptr i32 %11 to ptr, !dbg !32
  store ptr %12, ptr %7, align 4, !dbg !33
  %13 = load ptr, ptr %7, align 4, !dbg !34
  %14 = load i32, ptr %13, align 4, !dbg !35
  %15 = inttoptr i32 %14 to ptr, !dbg !36
  store ptr %15, ptr %8, align 4, !dbg !37
  %16 = load ptr, ptr %8, align 4, !dbg !38
  %17 = getelementptr inbounds i32, ptr %16, i32 -1, !dbg !38
  store ptr %17, ptr %8, align 4, !dbg !38
  %18 = load ptr, ptr %8, align 4, !dbg !39
  %19 = load i32, ptr %18, align 4, !dbg !40
  %20 = add i32 %19, 8, !dbg !41
  store i32 %20, ptr %6, align 4, !dbg !42
  %21 = load i32, ptr %6, align 4, !dbg !43
  %22 = inttoptr i32 %21 to ptr, !dbg !44
  %23 = load i32, ptr %22, align 4, !dbg !45
  store i32 %23, ptr %6, align 4, !dbg !46
  %24 = load i32, ptr %6, align 4, !dbg !47
  %25 = load i32, ptr %4, align 4, !dbg !48
  %26 = icmp eq i32 %24, %25, !dbg !49
  br i1 %26, label %27, label %32, !dbg !47

27:                                               ; preds = %2
  %28 = load ptr, ptr %8, align 4, !dbg !50
  %29 = ptrtoint ptr %28 to i32, !dbg !51
  %30 = load ptr, ptr %7, align 4, !dbg !52
  store i32 %29, ptr %30, align 4, !dbg !53
  %31 = load i32, ptr %6, align 4, !dbg !54
  store i32 %31, ptr %3, align 4, !dbg !55
  br label %33, !dbg !55

32:                                               ; preds = %2
  call void asm sideeffect "bx r1", ""() #1, !dbg !56, !srcloc !57
  br label %33

33:                                               ; preds = %27, %32
  %34 = load i32, ptr %3, align 4, !dbg !58
  ret i32 %34, !dbg !58
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @getidx() #0 !dbg !59 {
  %1 = alloca i32, align 4
  %2 = alloca ptr, align 4
  %3 = alloca ptr, align 4
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 4
  %8 = alloca ptr, align 4
  %9 = load volatile ptr, ptr @pxCurrentTCB, align 4, !dbg !60
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, ptr %9, i32 0, i32 4, !dbg !61
  %11 = load ptr, ptr %10, align 8, !dbg !61
  store ptr %11, ptr %2, align 4, !dbg !62
  store ptr inttoptr (i32 536936448 to ptr), ptr %3, align 4, !dbg !63
  store ptr inttoptr (i32 536936452 to ptr), ptr %4, align 4, !dbg !64
  store i32 0, ptr %5, align 4, !dbg !65
  br label %12, !dbg !66

12:                                               ; preds = %26, %0
  %13 = load i32, ptr %5, align 4, !dbg !67
  %14 = icmp slt i32 %13, 10, !dbg !68
  br i1 %14, label %15, label %29, !dbg !69

15:                                               ; preds = %12
  %16 = load ptr, ptr %4, align 4, !dbg !70
  %17 = load i32, ptr %16, align 4, !dbg !71
  %18 = inttoptr i32 %17 to ptr, !dbg !72
  %19 = load ptr, ptr %2, align 4, !dbg !73
  %20 = icmp eq ptr %18, %19, !dbg !74
  br i1 %20, label %21, label %23, !dbg !72

21:                                               ; preds = %15
  %22 = load i32, ptr %5, align 4, !dbg !75
  store i32 %22, ptr %1, align 4, !dbg !76
  br label %53, !dbg !76

23:                                               ; preds = %15
  %24 = load ptr, ptr %4, align 4, !dbg !77
  %25 = getelementptr inbounds i32, ptr %24, i32 1, !dbg !77
  store ptr %25, ptr %4, align 4, !dbg !77
  br label %26, !dbg !78

26:                                               ; preds = %23
  %27 = load i32, ptr %5, align 4, !dbg !79
  %28 = add nsw i32 %27, 1, !dbg !79
  store i32 %28, ptr %5, align 4, !dbg !79
  br label %12, !dbg !69, !llvm.loop !80

29:                                               ; preds = %12
  %30 = load ptr, ptr %3, align 4, !dbg !82
  %31 = load i8, ptr %30, align 1, !dbg !83
  %32 = zext i8 %31 to i32, !dbg !83
  store i32 %32, ptr %6, align 4, !dbg !84
  %33 = load i32, ptr %6, align 4, !dbg !85
  %34 = mul i32 %33, 4, !dbg !86
  %35 = add i32 536936452, %34, !dbg !87
  %36 = inttoptr i32 %35 to ptr, !dbg !88
  store ptr %36, ptr %7, align 4, !dbg !89
  %37 = load i32, ptr %6, align 4, !dbg !90
  %38 = mul i32 %37, 4, !dbg !91
  %39 = add i32 536936492, %38, !dbg !92
  %40 = inttoptr i32 %39 to ptr, !dbg !93
  store ptr %40, ptr %8, align 4, !dbg !94
  %41 = load ptr, ptr %2, align 4, !dbg !95
  %42 = ptrtoint ptr %41 to i32, !dbg !96
  %43 = load ptr, ptr %7, align 4, !dbg !97
  store i32 %42, ptr %43, align 4, !dbg !98
  %44 = load i32, ptr %6, align 4, !dbg !99
  %45 = mul i32 %44, 400, !dbg !100
  %46 = add i32 536936532, %45, !dbg !101
  %47 = load ptr, ptr %8, align 4, !dbg !102
  store i32 %46, ptr %47, align 4, !dbg !103
  %48 = load i32, ptr %6, align 4, !dbg !104
  %49 = add i32 %48, 1, !dbg !105
  %50 = trunc i32 %49 to i8, !dbg !104
  %51 = load ptr, ptr %3, align 4, !dbg !106
  store i8 %50, ptr %51, align 1, !dbg !107
  %52 = load i32, ptr %6, align 4, !dbg !108
  store i32 %52, ptr %1, align 4, !dbg !109
  br label %53, !dbg !109

53:                                               ; preds = %29, %21
  %54 = load i32, ptr %1, align 4, !dbg !110
  ret i32 %54, !dbg !110
}

attributes #0 = { noinline nounwind optnone "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "clang version 18.0.0 (https://github.com/beerabbit/safestack.git 924411f7435188d98a0c744016baf7a22cb5b036)", isOptimized: false, runtimeVersion: 0, emissionKind: NoDebug, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "../Core/Src/cfi.c", directory: "/home/creaker00/safestack/test/freertos_origin/Debug")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{i32 1, !"min_enum_size", i32 4}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = !{!"clang version 18.0.0 (https://github.com/beerabbit/safestack.git 924411f7435188d98a0c744016baf7a22cb5b036)"}
!7 = distinct !DISubprogram(name: "forward", scope: !1, file: !1, line: 95, type: !8, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!8 = !DISubroutineType(types: !9)
!9 = !{}
!10 = !DILocation(line: 96, column: 47, scope: !7)
!11 = !DILocation(line: 96, column: 51, scope: !7)
!12 = !DILocation(line: 96, column: 44, scope: !7)
!13 = !DILocation(line: 96, column: 20, scope: !7)
!14 = !DILocation(line: 96, column: 12, scope: !7)
!15 = !DILocation(line: 97, column: 32, scope: !7)
!16 = !DILocation(line: 97, column: 31, scope: !7)
!17 = !DILocation(line: 97, column: 19, scope: !7)
!18 = !DILocation(line: 97, column: 12, scope: !7)
!19 = !DILocation(line: 98, column: 10, scope: !7)
!20 = !DILocation(line: 98, column: 3, scope: !7)
!21 = !DILocation(line: 98, column: 8, scope: !7)
!22 = !DILocation(line: 99, column: 6, scope: !7)
!23 = !DILocation(line: 100, column: 21, scope: !7)
!24 = !DILocation(line: 100, column: 11, scope: !7)
!25 = !DILocation(line: 100, column: 3, scope: !7)
!26 = !DILocation(line: 100, column: 9, scope: !7)
!27 = !DILocation(line: 103, column: 1, scope: !7)
!28 = distinct !DISubprogram(name: "backward", scope: !1, file: !1, line: 104, type: !8, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0)
!29 = !DILocation(line: 106, column: 47, scope: !28)
!30 = !DILocation(line: 106, column: 51, scope: !28)
!31 = !DILocation(line: 106, column: 44, scope: !28)
!32 = !DILocation(line: 106, column: 20, scope: !28)
!33 = !DILocation(line: 106, column: 12, scope: !28)
!34 = !DILocation(line: 107, column: 32, scope: !28)
!35 = !DILocation(line: 107, column: 31, scope: !28)
!36 = !DILocation(line: 107, column: 19, scope: !28)
!37 = !DILocation(line: 107, column: 12, scope: !28)
!38 = !DILocation(line: 108, column: 6, scope: !28)
!39 = !DILocation(line: 109, column: 22, scope: !28)
!40 = !DILocation(line: 109, column: 21, scope: !28)
!41 = !DILocation(line: 109, column: 28, scope: !28)
!42 = !DILocation(line: 109, column: 7, scope: !28)
!43 = !DILocation(line: 110, column: 26, scope: !28)
!44 = !DILocation(line: 110, column: 13, scope: !28)
!45 = !DILocation(line: 110, column: 12, scope: !28)
!46 = !DILocation(line: 110, column: 10, scope: !28)
!47 = !DILocation(line: 111, column: 8, scope: !28)
!48 = !DILocation(line: 111, column: 16, scope: !28)
!49 = !DILocation(line: 111, column: 13, scope: !28)
!50 = !DILocation(line: 112, column: 28, scope: !28)
!51 = !DILocation(line: 112, column: 18, scope: !28)
!52 = !DILocation(line: 112, column: 10, scope: !28)
!53 = !DILocation(line: 112, column: 16, scope: !28)
!54 = !DILocation(line: 113, column: 16, scope: !28)
!55 = !DILocation(line: 113, column: 9, scope: !28)
!56 = !DILocation(line: 116, column: 9, scope: !28)
!57 = !{i64 4633}
!58 = !DILocation(line: 118, column: 1, scope: !28)
!59 = distinct !DISubprogram(name: "getidx", scope: !1, file: !1, line: 119, type: !8, scopeLine: 119, spFlags: DISPFlagDefinition, unit: !0)
!60 = !DILocation(line: 120, column: 22, scope: !59)
!61 = !DILocation(line: 120, column: 36, scope: !59)
!62 = !DILocation(line: 120, column: 15, scope: !59)
!63 = !DILocation(line: 121, column: 8, scope: !59)
!64 = !DILocation(line: 122, column: 12, scope: !59)
!65 = !DILocation(line: 123, column: 10, scope: !59)
!66 = !DILocation(line: 123, column: 6, scope: !59)
!67 = !DILocation(line: 123, column: 15, scope: !59)
!68 = !DILocation(line: 123, column: 16, scope: !59)
!69 = !DILocation(line: 123, column: 2, scope: !59)
!70 = !DILocation(line: 124, column: 8, scope: !59)
!71 = !DILocation(line: 124, column: 7, scope: !59)
!72 = !DILocation(line: 124, column: 6, scope: !59)
!73 = !DILocation(line: 124, column: 21, scope: !59)
!74 = !DILocation(line: 124, column: 18, scope: !59)
!75 = !DILocation(line: 125, column: 11, scope: !59)
!76 = !DILocation(line: 125, column: 4, scope: !59)
!77 = !DILocation(line: 127, column: 11, scope: !59)
!78 = !DILocation(line: 128, column: 2, scope: !59)
!79 = !DILocation(line: 123, column: 22, scope: !59)
!80 = distinct !{!80, !69, !78, !81}
!81 = !{!"llvm.loop.mustprogress"}
!82 = !DILocation(line: 129, column: 26, scope: !59)
!83 = !DILocation(line: 129, column: 25, scope: !59)
!84 = !DILocation(line: 129, column: 14, scope: !59)
!85 = !DILocation(line: 130, column: 48, scope: !59)
!86 = !DILocation(line: 130, column: 57, scope: !59)
!87 = !DILocation(line: 130, column: 45, scope: !59)
!88 = !DILocation(line: 130, column: 21, scope: !59)
!89 = !DILocation(line: 130, column: 12, scope: !59)
!90 = !DILocation(line: 131, column: 50, scope: !59)
!91 = !DILocation(line: 131, column: 59, scope: !59)
!92 = !DILocation(line: 131, column: 47, scope: !59)
!93 = !DILocation(line: 131, column: 23, scope: !59)
!94 = !DILocation(line: 131, column: 12, scope: !59)
!95 = !DILocation(line: 132, column: 22, scope: !59)
!96 = !DILocation(line: 132, column: 12, scope: !59)
!97 = !DILocation(line: 132, column: 3, scope: !59)
!98 = !DILocation(line: 132, column: 10, scope: !59)
!99 = !DILocation(line: 133, column: 29, scope: !59)
!100 = !DILocation(line: 133, column: 38, scope: !59)
!101 = !DILocation(line: 133, column: 26, scope: !59)
!102 = !DILocation(line: 133, column: 3, scope: !59)
!103 = !DILocation(line: 133, column: 12, scope: !59)
!104 = !DILocation(line: 134, column: 11, scope: !59)
!105 = !DILocation(line: 134, column: 20, scope: !59)
!106 = !DILocation(line: 134, column: 3, scope: !59)
!107 = !DILocation(line: 134, column: 9, scope: !59)
!108 = !DILocation(line: 135, column: 9, scope: !59)
!109 = !DILocation(line: 135, column: 2, scope: !59)
!110 = !DILocation(line: 137, column: 1, scope: !59)
